require 'rubygems'
require 'pathname'
Bundler.require(:default)
Dotenv.load

include FileUtils::Verbose

task :weekly => [:'weekly:brew', :'weekly:update_evercondo', :'weekly:mas']

task :adobe_launchd do
  system 'ls -l /Library/LaunchAgents ~/Library/LaunchAgents /Library/LaunchDaemons /System/Library/LaunchDaemons/ /System/Library/LaunchAgents/ | grep adobe'
end

namespace :weekly do
  task :update_evercondo do
    paths = Pathname.glob("#{ENV['HOME']}/Projects/ruby/everapps/*")
    paths.each do |path|
      cd path do
        system 'git up'
      end
    end
  end

  task :brew do
    Bundler.with_clean_env do
      sh 'brew update'
      sh 'brew upgrade'
      sh 'brew cleanup'
    end
  end

  # run last because mas upgrade might crash
  task :mas do
    sh 'softwareupdate -l'
    sh 'mas upgrade'
  end
end

task :js do
  Dir['*.js'].each do |js|
    puts "#{js}..."
    puts File.read(js).gsub(/(\n|\t)/,'')
    puts
  end
end

task :download => [:'download:link', :'download:all', :'download:fix_filenames']

Cocaine::CommandLine.logger = Logger.new(STDOUT)

namespace :download do
  DownloadPath = Pathname.new('Downloads')
  ListFile = DownloadPath + 'list'

  task :link do
    list = Pathname.new(File.expand_path('~/Downloads/list'))
    blake_list  = Pathname.new(File.expand_path('~/Dropbox/Blake Documents/list'))
    next if (list.exist? or !blake_list.exist?)
    list.make_symlink blake_list
  end

  task :all do
    ListFiles = Pathname.glob('Downloads/**/list')
    next if ListFiles.empty?

    ListFiles.each do |listfile|
      list = listfile.read.split.compact.reject(&:empty?)

      while list.any?
        url = list.shift
        cd listfile.dirname do
          if url[/(vimeo|youtube)\.com/]
            sh "youtube-dl -lic --format 38/37/22/35/34/18/6/5/17/13 '#{url}'"
          elsif url[/(put)\.io/]
            filename = url[/\w+\.zip/]
            cmd      = %Q{wget --http-user=#{ENV['PUTIO_USER']} --http-password='#{ENV['PUTIO_PASSWORD']}' -O '#{filename}' '#{url}'}

            system cmd
            # Cocain stopped displaying output ...
            # Cocaine::CommandLine.new("wget" , "--http-user=#{ENV['PUTIO_USER']} --http-password=#{ENV['PUTIO_PASSWORD']} -O '#{filename}' '#{url}'").run
            Cocaine::CommandLine.new('unzip', filename).run
            Cocaine::CommandLine.new('rm'   , filename).run
          else
            Cocaine::CommandLine.new("wget", "-c -U 'QuickTime/7.6.2' '#{url}'").run
          end
        end
        File.open(listfile, 'w') {|f| f.write list.join("\n")}
      end
      listfile.delete
    end
    sh 'open ~/Downloads'
  end

  task :fix_filenames do
    cd DownloadPath do
      Pathname.glob('makeplaylist.*').reject{|p| p.to_s[/mp4$/]}.each do |f|
        f.rename(f.to_s + '.mp4')
      end
    end
  end
end